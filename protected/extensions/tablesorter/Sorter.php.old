<?php
/**
* Tablesorter extension for Yii.
*
* jQuery tablesorter extension for Yii, for turning a standard grid view into a sortable table without page refreshes.
* Its a wrapper of https://github.com/Mottie/tablesorter
*
* @author Nachi <innovativenachi@gmail.com>
* @link https://github.com/Mottie/tablesorter
* @link https://github.com/innovativenachi/tablesorter
* @version 0.1
*
*/
class Sorter extends CWidget
{
//Parameters passed
private $_options = array(
        'data' => null,
        'columns' => null,
        'filters' => null,
    );
    
    public function init()
{
//Table sorter was intialized
}

//Magic function for get parameters
public function __get($name) {
        if(array_key_exists($name, $this->_options)) {
            return $this->_options[$name];
        }
        return parent::__get($name);
    }

//Magic function for setting parameters
    public function __set($name, $value) {
        if(array_key_exists($name, $this->_options)) {
            return $this->_options[$name] = $value;
        }
        return parent::__set($name, $value);
    }

//Register CSS and Jquery
public function registerClientScript()
{
$bu = Yii::app()->assetManager->publish(dirname(__FILE__) . '/assets/');
        $cs = Yii::app()->clientScript;
        //Intialize CSS

$cs->registerCssFile($bu . '/css/jquery.dataTables.css');
//Intialize Jquery
//$cs->registerScriptFile($bu . '/js/jquery.dataTables.js');
//$cs->registerScriptFile($bu . '/js/scripts.js');
}

public function genTable()
{
$datas=$this->data;
$object=$datas[0];

$class=get_class($object);

$count=count($datas);
echo "<div class='noprint'>$count records found</div>";

//Table start
echo "<table class='dataTable' autosize='0.0' style='width:100%'>\n";
//Table head start
echo "<thead>\n";
echo "<tr>\n";
$filters=$this->filters;
$i=0;
foreach($this->columns as $column )
{
$filter = sizeof($filters) > 0 ? $filters[$i] : '';
$find = explode(".", $column[1]);
echo "<th class='". $filter .' '. $find[0]."'>".ucfirst($column[0])."</th>";
$i++;
}
echo "<th class=' noprint filter-false'>Actions</th>";
echo "</tr>\n";
echo "</thead>\n";
//Table head end

//Table body start
echo "<tbody>\n";
foreach($datas as $data)
{

echo "<tr>\n";
foreach($this->columns as $column)
{
$find = explode(".", $column[1]);
$subjects = array();
if(count($find)>1) {
$found = 0;
if ( isset($data->$find[0]) ){
	if ( isset($find[2]) ){
		foreach($data->$find[0] as $subject){
			array_push( $subjects, $subject->$find[1]->$find[2]);
		}
		echo '<td class="'. $find[0] .'">' . join(', ', $subjects ) . '</td>';
	}
	else {
		echo '<td class="'. $find[0] .'">' . $data->$find[0]->$find[1] . '</td>';
	}
}
else{
echo '<td class="'. $find[0] .'"></td>';
}
}
else {	
echo '<td class="'. $find[0] .'">'.$data->$column[1]."</td>";
}
}
//View, Edit and Delete Urls
//$view_url=Yii::app()->createAbsoluteUrl($class.'/view',array('id'=>$data->job_id));
//$edit_url=Yii::app()->createAbsoluteUrl($class.'/update',array('id'=>$data->job_id));
//$delete_url=Yii::app()->createAbsoluteUrl('delete',array('id'=>$data->id));
//View, Edit, Delete Icons (bootstrap)
if ($class == 'Students') {
    $view_url =Yii::app()->createAbsoluteUrl('student/action'.'/view',array('id'=>$data->student_id));
    $edit_url=Yii::app()->createAbsoluteUrl('student/action'.'/update',array('id'=>$data->student_id));
    $delete_url=Yii::app()->createAbsoluteUrl('student/action'.'/delete',array('id'=>$data->student_id));
}
if ($class == 'Clients') {
    $view_url =Yii::app()->createAbsoluteUrl('clients/client'.'/view',array('id'=>$data->client_id));
    $edit_url=Yii::app()->createAbsoluteUrl('clients/client'.'/update',array('id'=>$data->client_id));
    $delete_url=Yii::app()->createAbsoluteUrl('clients/client'.'/delete',array('id'=>$data->client_id));
}

echo "<td class='noprint'> <a class='btn btn-small' href='".$view_url."'><i class='icon-search'></i></a>
&nbsp; <a class='btn btn-small' href='".$edit_url."'><i class='icon-edit'></i></a>
&nbsp; <a class='btn btn-small' href='".$delete_url."'><i class='icon-trash'></i></a>
</td>";
echo "</tr>\n";
}
echo "</tbody>\n";
//Table body end

//Table footer start
echo "<tfoot class='noprint'>\n";
echo '<tr>
<th colspan="7" class="pager noprint form-horizontal">
<button type="button" class="noprint btn first"><i class="icon-step-backward"></i></button>
<button type="button" class="noprint btn prev"><i class="icon-arrow-left"></i></button>
<span class="noprint pagedisplay"></span> <!-- this can be any element, including an input -->
<button type="button" class="noprint btn next"><i class="icon-arrow-right"></i></button>
<button type="button" class="noprint btn last"><i class="icon-step-forward"></i></button>
<select class="noprint pagesize input-mini" title="Select page size">
<option selected="selected" value="100">100</option>
<option value="50">50</option>
<option value="25">25</option>
<option value="10">10</option>
</select>
<select class="noprint pagenum input-mini" title="Select page number"></select>
</th>
</tr>';
echo "</tfoot>\n";
//Table footer end

echo "</table>\n";
//Table end
}

//Runs after the widget is intialized
public function run()
{
$this->registerClientScript();
$this->genTable();
}

}
?>


